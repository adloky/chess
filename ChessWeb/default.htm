<html>
  <head>
    <style>
      .z0 { background-color: #eddcbe; }
      .z1 { background-color: #c2a480; }
      .square-sel { background-color: #99bdd8; }
      .board td { width: 12.5%; height: 12.5%; background-repeat: no-repeat; background-position: center center; background-size: cover; }
      .arrows { position: absolute; top: 0; left: 0; width: 100%; height: 100%; background-repeat: no-repeat; background-position: center center; background-size: cover; pointer-events: none; }
      .move { display: inline-block; font-size: 16pt; padding: 2pt 5pt; cursor: pointer; border-radius: 2pt; }
      .move-sel { background-color: #c8daed; }
      .pgn-box { display: none; }
      .pgn-box.visible { display: block; }
      
      .pbr { background-image: url(img/br.svg); }
      .pbn { background-image: url(img/bn.svg); }
      .pbb { background-image: url(img/bb.svg); }
      .pbq { background-image: url(img/bq.svg); }
      .pbk { background-image: url(img/bk.svg); }
      .pbp { background-image: url(img/bp.svg); }
      .pwr { background-image: url(img/wr.svg); }
      .pwn { background-image: url(img/wn.svg); }
      .pwb { background-image: url(img/wb.svg); }
      .pwq { background-image: url(img/wq.svg); }
      .pwk { background-image: url(img/wk.svg); }
      .pwp { background-image: url(img/wp.svg); }
      .pzz { background-image: none; }
    </style>

    <script src="jquery-3.3.1.js"></script>
    <script src="Scripts/jquery.signalR-2.4.2.js"></script>
    <script src="http://192.168.0.2:8080/signalr/hubs"></script>
  </head>
  <body style="font-family: sans-serif; ">
      <div style="display: inline-block; float: left; width: 400pt; height: 400pt; position: relative">
          <table class="board" cellpadding="0" cellspacing="0" style="width: 100%; height: 100%">
              <tr><td class="sa8 z0 pzz">&nbsp;</td><td class="sb8 z1 pzz">&nbsp;</td><td class="sc8 z0 pzz">&nbsp;</td><td class="sd8 z1 pzz">&nbsp;</td><td class="se8 z0 pzz">&nbsp;</td><td class="sf8 z1 pzz">&nbsp;</td><td class="sg8 z0 pzz">&nbsp;</td><td class="sh8 z1 pzz"></td></tr>
              <tr><td class="sa7 z1 pzz">&nbsp;</td><td class="sb7 z0 pzz">&nbsp;</td><td class="sc7 z1 pzz">&nbsp;</td><td class="sd7 z0 pzz">&nbsp;</td><td class="se7 z1 pzz">&nbsp;</td><td class="sf7 z0 pzz">&nbsp;</td><td class="sg7 z1 pzz">&nbsp;</td><td class="sh7 z0 pzz"></td></tr>
              <tr><td class="sa6 z0 pzz">&nbsp;</td><td class="sb6 z1 pzz">&nbsp;</td><td class="sc6 z0 pzz">&nbsp;</td><td class="sd6 z1 pzz">&nbsp;</td><td class="se6 z0 pzz">&nbsp;</td><td class="sf6 z1 pzz">&nbsp;</td><td class="sg6 z0 pzz">&nbsp;</td><td class="sh6 z1 pzz"></td></tr>
              <tr><td class="sa5 z1 pzz">&nbsp;</td><td class="sb5 z0 pzz">&nbsp;</td><td class="sc5 z1 pzz">&nbsp;</td><td class="sd5 z0 pzz">&nbsp;</td><td class="se5 z1 pzz">&nbsp;</td><td class="sf5 z0 pzz">&nbsp;</td><td class="sg5 z1 pzz">&nbsp;</td><td class="sh5 z0 pzz"></td></tr>
              <tr><td class="sa4 z0 pzz">&nbsp;</td><td class="sb4 z1 pzz">&nbsp;</td><td class="sc4 z0 pzz">&nbsp;</td><td class="sd4 z1 pzz">&nbsp;</td><td class="se4 z0 pzz">&nbsp;</td><td class="sf4 z1 pzz">&nbsp;</td><td class="sg4 z0 pzz">&nbsp;</td><td class="sh4 z1 pzz"></td></tr>
              <tr><td class="sa3 z1 pzz">&nbsp;</td><td class="sb3 z0 pzz">&nbsp;</td><td class="sc3 z1 pzz">&nbsp;</td><td class="sd3 z0 pzz">&nbsp;</td><td class="se3 z1 pzz">&nbsp;</td><td class="sf3 z0 pzz">&nbsp;</td><td class="sg3 z1 pzz">&nbsp;</td><td class="sh3 z0 pzz"></td></tr>
              <tr><td class="sa2 z0 pzz">&nbsp;</td><td class="sb2 z1 pzz">&nbsp;</td><td class="sc2 z0 pzz">&nbsp;</td><td class="sd2 z1 pzz">&nbsp;</td><td class="se2 z0 pzz">&nbsp;</td><td class="sf2 z1 pzz">&nbsp;</td><td class="sg2 z0 pzz">&nbsp;</td><td class="sh2 z1 pzz"></td></tr>
              <tr><td class="sa1 z1 pzz">&nbsp;</td><td class="sb1 z0 pzz">&nbsp;</td><td class="sc1 z1 pzz">&nbsp;</td><td class="sd1 z0 pzz">&nbsp;</td><td class="se1 z1 pzz">&nbsp;</td><td class="sf1 z0 pzz">&nbsp;</td><td class="sg1 z1 pzz">&nbsp;</td><td class="sh1 z0 pzz"></td></tr>
          </table>
          
          <div class="arrows">
              &nbsp;
          </div>
      </div>

      <div style=" width: 300pt; float: left; padding: 0pt 10pt; ">
          <div style="align-content: center; display: flex; ">
              <div class="score" style="display: inline-block; font-size: 24pt; width: 90pt; ">&nbsp;</div>
              <button class="pgn-btn" style="font-size: 12pt; ">PGN</button>
              <button class="right-btn" style="font-size: 12pt; margin-left: 5pt; ">&nbsp;&nbsp;>&nbsp;&nbsp;</button>
              <select class="engine-num" style="font-size: 12pt; margin-left: 5pt; ">
                  <option value="0">Lc0</option>
                  <option value="1">SF</option>
              </select>
          </div>
          <div class="move-var" style="padding-top: 5pt; ">&nbsp;</div>
          <div class="pgn-box">
              <textarea class="pgn-text" rows="3" style="width: 100%; margin: 5pt 0; "></textarea>
              <button class="pgn-ok" style="font-size: 12pt; ">OK</button>
          </div>
          <div class="move-box" style="padding: 10pt 0;"><span class="move-end"/>&nbsp;</div>
      </div>
      <script>
          var startFen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
          var pieceClassMap = new Map([["P", "pwp"], ["R", "pwr"], ["N", "pwn"], ["B", "pwb"], ["Q", "pwq"], ["K", "pwk"],
                                       ["p", "pbp"], ["r", "pbr"], ["n", "pbn"], ["b", "pbb"], ["q", "pbq"], ["k", "pbk"], ["z", "pzz"]]);
          var curFen;

          var engine;

          function getArrowCoords(move, width) {
              var x1 = (move.charCodeAt(0) - "a".charCodeAt(0)) * 100 + 50;
              var y1 = ("8".charCodeAt(0) - move.charCodeAt(1)) * 100 + 50;
              var x2 = (move.charCodeAt(2) - "a".charCodeAt(0)) * 100 + 50;
              var y2 = ("8".charCodeAt(0) - move.charCodeAt(3)) * 100 + 50;

              var dx = x1 - x2;
              var dy = y1 - y2;
              var length = Math.sqrt(dx * dx + dy * dy);
              var sin = dx / length;
              var cos = dy / length;

              var ps = [];

              ps.push({ x: 0, y: 0 });
              ps.push({ x: width * 1.5, y: width * 3 });
              ps.push({ x: width / 2, y: width * 3 });
              ps.push({ x: width / 2, y: length});
              ps.push({ x: -width / 2, y: length });
              ps.push({ x: -width / 2, y: width * 3 });
              ps.push({ x: -width * 1.5, y: width * 3 });

              for (var i = 0; i < ps.length; i++) {
                  var x = ps[i].x;
                  var y = ps[i].y;
                  ps[i].x = Math.round(  x * cos + y * sin + x2);
                  ps[i].y = Math.round(- x * sin + y * cos + y2);
              }

              return ps.map(p => "" + p.x + "," + p.y).join(" ");
          }

          function getArrowsSvg(crs) {
              var as = crs.map(x => { return { move: x.move, width: 30 - Math.abs(crs[0].score - x.score) * (20 / (0.5 * 100)) }; }).filter(x => x.width >= 10 && x.move !== null);
              var s = as.map(x => "<polygon points=\"" + getArrowCoords(x.move, x.width) + "\" style=\"fill: #028; fill-opacity: 0.3\"/>").join("");
              return "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"800\" height=\"800\">" + s + "</svg>";
          }

          function applyArrows(crs) {
              var style = "background-image: url('data:image/svg+xml;ut8," + getArrowsSvg(crs).replaceAll("#", "%23") + "'); ";
              $(".arrows").attr("style", style);
          }

          function pieceClass(elem, newClass) {
              var elemSel = $(elem);
              var curClass = elemSel.attr("class").match(/p(zz|[bw][prnbqk])/)[0];
              if (newClass) {
                  elemSel.attr("class", elemSel.attr("class").replace(curClass, newClass));
                  curClass = newClass;
              }
              return curClass;
          }

          function applyFen(fen) {
              var fen0 = fen.split(" ")[0];
              fen0 = fen0.replaceAll("1", "z",).replaceAll("2", "zz").replaceAll("3", "zzz").replaceAll("4", "zzzz")
                  .replaceAll("5", "zzzzz").replaceAll("6", "zzzzzz").replaceAll("7", "zzzzzzz").replaceAll("8", "zzzzzzzz");

              var fs = fen0.split("/");
              var cols = "abcdefgh";
              var rows = "87654321";

              for (var y = 0; y < 8; y++) {
                  for (var x = 0; x < 8; x++) {
                      var elem = $(".s" + cols[x] + rows[y]);
                      pieceClass(elem, pieceClassMap.get(fs[y][x]));
                  }
              }

              curFen = fen;
          }

          function applyFenNCalc(fen, force) {
              if (curFen !== fen || force) {
                  applyFen(fen);
                  applyArrows([]);
                  $(".score").html("&nbsp;");
                  $(".move-var").html("&nbsp;");
                  engine.server.calcScores(curFen);
              }
          }

          function getMoveIndex() {
              var index = -1;
              var moveSels = $(".move-sel");
              if (moveSels.length > 0) {
                  index = Number(moveSels.data("index"));
              }
              return index;
          }

          function addMoves(mfs) {
              if (!mfs) {
                  mfs = [];
              }
              else if (!Array.isArray(mfs)) {
                  mfs = [mfs];
              }

              var index = getMoveIndex();
              $(".move").get().filter(x => Number($(x).data("index")) > index).forEach(x => $(x).remove());
              $(".move-sel").removeClass("move-sel");
              $(".move-end").before(mfs.map((mf, i) => "<div class=\"move" + ((i < mfs.length - 1) ? "" : " move-sel") + "\" data-fen=\""
                  + mf.fen + "\" data-index=\"" + (index + i + 1) + "\">" + mf.move + "</div>").join(""));
          }

          $(document).ready(function () {
              applyFen(startFen);

              $(".board td").click(function () {
                  var turn = curFen.split(" ")[1];
                  var pClass = pieceClass(this);
                  var curSel = $(".square-sel");

                  if ($(this).hasClass("square-sel")) {
                      $(this).removeClass("square-sel");
                  }
                  else if (turn === pClass.charAt(1)) {
                      $(".square-sel").removeClass("square-sel");
                      $(this).addClass("square-sel");
                  }
                  else if (curSel.length > 0) {
                      var srcSquare = curSel.attr("class").match(/s[a-h][1-8]/)[0].substring(1);
                      var dstSquare = $(this).attr("class").match(/s[a-h][1-8]/)[0].substring(1);
                      var move = srcSquare + dstSquare;

                      if (pieceClass(curSel).charAt(2) === "p" && (dstSquare.charAt(1) === "1" || dstSquare.charAt(1) === "8")) {
                          move += "q";
                      }

                      engine.server.move(curFen, move).done(function (mf) {
                          if (mf.fen === null) return;

                          applyFenNCalc(mf.fen);
                          addMoves(mf);
                          curSel.removeClass("square-sel");
                      });
                  }
              });

              $(".pgn-btn").click(function () {
                  $(".pgn-box").toggleClass("visible");
              });

              $(".pgn-ok").click(function () {
                  engine.server.getMoves($(".pgn-text").val()).done(moveFens => {
                      $(".pgn-box").removeClass("visible");
                      $(".pgn-text").val("");

                      $(".move-sel").removeClass("move-sel");
                      addMoves(moveFens);
                      $(".move-sel").removeClass("move-sel");
                      applyFenNCalc(startFen);
                  });
              });

              $(".move-box").on("click", ".move", function () {
                  $(".move-sel").removeClass("move-sel");
                  $(this).addClass("move-sel");
                  var fen = $(this).data("fen");
                  applyFenNCalc(fen);
              });

              $(".right-btn").click(function () {
                  var index = getMoveIndex();
                  index++;
                  var nextMove = $(".move[data-index=\"" + index + "\"]");
                  if (nextMove.length == 0) return;
                  $(".move-sel").removeClass("move-sel");
                  nextMove.addClass("move-sel");
                  var fen = nextMove.data("fen");
                  applyFenNCalc(fen);
              });

              $(".engine-num").change(function () {
                  engine.server.engineNumber($(".engine-num").val()).done(function () {
                      applyFenNCalc(curFen, true);
                  });
              });

              engine = $.connection.engineHub;
              $.connection.hub.url = "http://192.168.0.2:8080/signalr";
              engine.client.applyScores = function (crs) {
                  applyArrows(crs);
                  $(".score").text(crs[0].score / 100);
                  $(".move-var").html(crs.filter(x => x.san).slice(0, 3).map(x => (x.score / 100) + " <b>" + x.san + "</b>").join(" &nbsp;") + "&nbsp;");
              }

              $.connection.hub.start().done(function () {
                  engine.server.engineNumber(null).done(function (n) {
                      $(".engine-num").val(n);
                  });

                  applyFenNCalc(curFen,true);
              });
          });
      </script>
  </body>
</html>